@using BAP.UI.HtmlHelpers
@using BAP.Lookups
@model BAP.eCommerce.DAL.Entities.Address
@{
    ILookupEngine engine = ViewBag.LookupEngineInstance;
}

<div class="form-group">
    @Html.LabelFor(model => model.Name, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.CompanyName, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FirstName, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.MiddleName, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.LastName, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.AddressLine1, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.AddressLine2, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.City, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.County, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Country, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.BapCountryListFor(model => model.Country, new { @class = "form-control", onchange = "fillStates()" })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.State, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.BapStateListFor(model => model.State, Model.Country, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Zip, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.PhoneNumber, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-1">
        @Html.EditorFor(model => model.PhoneExtension, new { htmlAttributes = new { @class = "form-control", @maxlength = "5" } })
        @Html.ValidationMessageFor(model => model.PhoneExtension, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FaxNumber, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.FaxNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.FaxNumber, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.CellNumber, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.CellNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
        @Html.ValidationMessageFor(model => model.CellNumber, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.ContactEmail, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, DisplayOptions.Humanize, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "ckeditor" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>

