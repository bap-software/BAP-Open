@using BAP.Resources
@using BAP.UI.HtmlHelpers
@model BAP.DAL.Entities.Currency
@{
    ViewBag.Title = Resources.UIText_Delete + " " + Resources.EntityLabel_Currency;
}

<!-- begin page-header -->
<h1 class="page-header">
    <a href="@Url.Action("Index", "Currencies", new { Area = "Administration"})" class="btn btn-square btn-default" title="@Resources.UIText_Back"><i class="fa fa-reply"></i></a>
    @ViewBag.Title 
</h1>
<!-- end page-header -->

<!-- begin row -->
<div class="row">
    <!-- begin col-12 -->
    <div class="col-md-12">
        <!-- begin panel -->
        <div class="panel panel-inverse" data-sortable-id="form-stuff-1">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                </div>
                <h4 class="panel-title">@Resources.UIText_SureToDelete @(Resources.EntityLabel_Currency)?</h4>
            </div>
            <div class="panel-body panel-form">
                <div class="form-horizontal form-bordered" novalidate>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Symbol, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.Symbol, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Enter currency symbol" } })                            
                        </div>
                        @Html.LabelFor(model => model.ThreeLetterCode, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.ThreeLetterCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Three letter code" } })                            
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Enter name" } })                            
                        </div>
                        @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Description" } })                            
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExchangeRate, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.ExchangeRate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                            
                        </div>
                        @Html.LabelFor(model => model.FormatString, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-3 col-sm-3">
                            @Html.EditorFor(model => model.FormatString, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                            
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RoundTo, new { @class = "control-label col-md-2 col-sm-2" })
                        <div class="col-md-1 col-sm-1">
                            @Html.EditorFor(model => model.RoundTo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                            
                        </div>
                        @Html.LabelFor(model => model.IsMain, new { @class = "control-label col-md-1 col-sm-1" })
                        <div class="col-md-2 col-sm-2">
                            @Html.EditorFor(model => model.IsMain, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })                            
                        </div>
                        @Html.LabelFor(model => model.IsEnabled, new { @class = "control-label col-md-1 col-sm-1" })
                        <div class="col-md-1 col-sm-1">
                            @Html.EditorFor(model => model.IsEnabled, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })                            
                        </div>
                    </div>

                    @Html.Partial("_ReadOnlyFields")

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Resources.UIText_Delete" class="btn btn-default btn-success" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
