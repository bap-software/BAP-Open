@using BAP.DAL;
@using BAP.Common;
@using BAP.UI.HtmlHelpers
@model BAP.DAL.Entities.OrganizationUser

@{
    IConfigHelper settings = ViewBag.ConfigHelperInstance;
    IAuthorizationContext authContext = ViewBag.AuthContextInstance;
}

<div class="form-group">
    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.UserName)
    </div>

    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.FullName)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.AddressLine1)
    </div>

    @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.AddressLine2)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.City)
    </div>

    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.County)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.Country)
    </div>
    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.State)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.Zip)
    </div>

    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.Email)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.PhoneNumber)
    </div>

    @Html.LabelFor(model => model.CellNumber, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.CellNumber)
    </div>
</div>

   
@if (Model.Roles != null && Model.Roles.Count > 0)
{
    var strRoles = string.Empty;
    foreach (var role in Model.Roles)
    {
        if (!string.IsNullOrEmpty(strRoles))
        {
            strRoles += ", ";
        }
        strRoles += role;
    }

    <div class="form-group">        
        @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
        <div class="col-md-3 col-sm-3">
            @strRoles
        </div>

        @if (Html.IsAdmin(settings, authContext))
        {
            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
            <div class="col-md-3 col-sm-3">
                @Html.DisplayFor(model => model.EmailConfirmed)
            </div>
        }        
    </div>
}

@if (Html.IsAdmin(settings, authContext))
{

    <div class="form-group">
        @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
        <div class="col-md-3 col-sm-3">
            @Html.DisplayFor(model => model.TwoFactorEnabled)
        </div>

        @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
        <div class="col-md-3 col-sm-3">
            @Html.DisplayFor(model => model.LockoutEnabled)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
        <div class="col-md-3 col-sm-3">
            @Html.DisplayFor(model => model.LockoutEndDateUtc)
        </div>

        @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
        <div class="col-md-3 col-sm-3">
            @Html.DisplayFor(model => model.AccessFailedCount)
        </div>
    </div>        
}

<div class="form-group">
    @Html.LabelFor(model => model.CreatedByUserName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.CreatedByUserName)
    </div>

    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.CreateDate)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LastModifiedByUserName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.LastModifiedByUserName)
    </div>

    @Html.LabelFor(model => model.LastModifiedDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.DisplayFor(model => model.LastModifiedDate)
    </div>
</div>

