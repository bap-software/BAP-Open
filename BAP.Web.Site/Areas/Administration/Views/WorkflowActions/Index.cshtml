@using BAP.Resources
@using PagedList.Mvc;
@using BAP.Lookups
@model PagedList.IPagedList<BAP.DAL.Entities.WorkflowAction>

@{
    ViewBag.Title = Resources.EntityLabel_WorkflowAction;
    ILookupEngine engine = ViewBag.LookupEngineInstance;
}

<!-- begin page-header -->
<h1 class="page-header">
    <a href="@Url.Action("Create", "WorkflowActions", new { Area = "Administration" })" class="btn btn-icon btn-success" title="@Resources.UIText_Create @Resources.EntityLabel_WorkflowAction"><i class="fa fa-plus"></i></a>
    @ViewBag.Title<small></small>
</h1>
<!-- end page-header -->
<!-- begin row -->
<div class="row">
    <!-- begin col-12 -->
    <div class="col-md-12">
        <!-- begin panel -->
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                </div>
                <h4 class="panel-title">@Resources.UIText_SearchResults</h4>
            </div>
            <div class="panel-body">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Resources.UIText_Actions</th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Workflow)
                            </th>                            
                            <th>
                                @Html.DisplayNameFor(model => model.First().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().ShortDescription)
                            </th>                            
                            <th>
                                @Html.DisplayNameFor(model => model.First().CreateDate)
                            </th>                            
                        </tr>
                    </thead>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("Details", new {id=item.Id})">
                                    <i class="glyphicon glyphicon-th-list"></i>
                                </a>
                                <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {id=item.Id})">
                                    <i class="glyphicon glyphicon-edit"></i>
                                </a>
                                <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {id=item.Id})">
                                    <i class="glyphicon glyphicon-remove"></i>
                                </a>
                            </td>


                            <td>
                                @Html.DisplayFor(modelItem => item.Workflow.Name)
                            </td>                                
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShortDescription)
                            </td>                                
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateDate)
                            </td>                                
                        </tr>
                    }
                </table>
            </div>
            @if (Model.PageCount > 1)
            {
                <hr />
                <div class="pagination-container">
                    <span>Page </span>@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)<span> of </span>@Model.PageCount
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </div>

            }
        </div>
    </div>
</div>
