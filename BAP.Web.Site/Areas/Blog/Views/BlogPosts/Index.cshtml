@using BAP.Resources
@using PagedList.Mvc;
@using BAP.Common;
@using BAP.Lookups
@model PagedList.IPagedList<BAP.DAL.Entities.BlogPost>

@{
    ViewBag.Title = Resources.UIText_Menu_Index;
	ILookupEngine engine = ViewBag.LookupEngineInstance;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<table class="table">
    <tr>
		<th>@Resources.UIText_Actions</th>
        <th>
            @Html.DisplayNameFor(model => model.First().Blog.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ShortDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Text)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MainImageUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreateDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastModifiedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreatedByUserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastModifiedByUserName)
        </th>
      
    </tr>

@foreach (var item in Model) {
    <tr>
	        <td>
			<a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("Details", new {id=item.Id})">
                <i class="glyphicon glyphicon-th-list"></i>
            </a>
            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {id=item.Id})">
                <i class="glyphicon glyphicon-edit"></i>
            </a>
            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {id=item.Id})">
                <i class="glyphicon glyphicon-remove"></i>
            </a>            
        </td>


        <td>
            @Html.DisplayFor(modelItem => item.Blog.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShortDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Text)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MainImageUrl)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModifiedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedByUserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModifiedByUserName)
        </td>
    </tr>
}

</table>
@if (Model.PageCount > 1)
{
    <hr />
    <span>Page </span>@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)<span> of </span>@Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
}

