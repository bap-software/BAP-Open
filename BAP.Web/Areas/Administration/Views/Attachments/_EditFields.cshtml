@using BAP.UI.HtmlHelpers
@using BAP.Lookups
@model BAP.DAL.Entities.Attachment
@{
    ILookupEngine engine = ViewBag.LookupEngineInstance;
}

<div class="form-group">
    <div class="col-md-2">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.AttachmentType, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        @Html.BapDropDownFor(model => model.AttachmentType, engine, @"AttachmentType", new { @class = "form-control" })
    </div>
</div>

@if (Model == null)
{
<div class="form-group">
    <div class="col-md-2">
        @Html.LabelFor(model => model.Object, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Object, new { @type = "text", @class = "form-control", @placeholder = "e.g. Product, Customer..."})
                @Html.ValidationMessageFor(model => model.Object, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.ObjectId, new { @type = "number", @class = "form-control", @placeholder = "Id: 1, 2, ...N"})
                @Html.ValidationMessageFor(model => model.ObjectId, "", new { @class = "text-danger" })
            </div>
        </div>
        
       
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        @Html.TextBoxFor(model => model.File, new { @type = "file", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
    </div>
</div>
}
else
{
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Object, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-4">
            <a href="@Url.Action("AdminDetails", Model.Object+"s", new { Id = Model.ObjectId })" target="_blank">@Model.Object</a>
        </div>
    
        <div class="col-md-2">
            @Html.LabelFor(model => model.PathUrl, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.File, new { @type = "file", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            <a href="@Url.Action("File", "Home", new { area = "", path = Model.PathUrl })" target="_blank">
                @Html.DisplayFor(model => model.PathUrl)
            </a>
        </div>
    </div>
}

<div class="form-group">
    <div class="col-md-2">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        @Html.BapDropDownFor(model => model.Status, engine, @"AttachmentStatus", new { @class = "form-control" })
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.StatusDate, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-4">
        @Html.EditorFor(model => model.StatusDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>
</div>

<div class="form-group">
    <div class="col-md-2">
        @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">        
        @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })        
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.PublishFrom, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">
        @Html.BapDateFor(model => model.PublishFrom, new { @class = "form-control" }, StartDate.Today)
        @Html.ValidationMessageFor(model => model.PublishFrom, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.PublishTo, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">
        @Html.BapDateFor(model => model.PublishTo, new { @class = "form-control" }, StartDate.NextYear)
        @Html.ValidationMessageFor(model => model.PublishTo, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-2">
        @Html.LabelFor(model => model.TitleText, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">
        @Html.EditorFor(model => model.TitleText, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AltText, "", new { @class = "text-danger" })
    </div>

    <div class="col-md-2">
        @Html.LabelFor(model => model.AltText, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">
        @Html.EditorFor(model => model.AltText, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AltText, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.PathAliases, htmlAttributes: new { @class = "control-label" })
    </div>
    <div class="col-md-2">
        @Html.EditorFor(model => model.PathAliases, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PathAliases, "", new { @class = "text-danger" })
    </div>
</div>
