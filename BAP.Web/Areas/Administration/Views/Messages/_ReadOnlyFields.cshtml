@using BAP.Lookups
@model BAP.DAL.Entities.Message

<div class="form-group">
    @Html.LabelFor(model => model.FromAddress, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.FromAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>

    @Html.LabelFor(model => model.ToAddress, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.ToAddress, new { htmlAttributes = new { @class = @"form-control", @readonly = "readonly" } })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CopyAddress, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.CopyAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>

    @Html.LabelFor(model => model.BlackCopyAddress, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.BlackCopyAddress, new { htmlAttributes = new { @class = @"form-control", @readonly = "readonly" } })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-8 col-sm-8">
        @Html.Raw(Model.Body)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Object, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-8 col-sm-8">
        @Html.ActionLink(Model.Object, "AdminDetails", Model.Object + "s", new { id = Model.ObjectId }, new { target = "_blank" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CreatedByUserName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.CreatedByUserName, new { htmlAttributes = new { @class = @"form-control", @readonly = "readonly" } })
    </div>

    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LastModifiedByUserName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.LastModifiedByUserName, new { htmlAttributes = new { @class = @"form-control", @readonly = "readonly" } })
    </div>

    @Html.LabelFor(model => model.LastModifiedDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
    <div class="col-md-3 col-sm-3">
        @Html.EditorFor(model => model.LastModifiedDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>
</div>
