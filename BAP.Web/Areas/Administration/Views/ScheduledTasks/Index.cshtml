@using BAP.Resources;
@using PagedList.Mvc;
@model PagedList.IPagedList<BAP.DAL.Entities.ScheduledTask>

@{
    ViewBag.Title = Resources.EntityLabel_ScheduledTask;
}

<!-- begin page-header -->
<h1 class="page-header">
    <a href="@Url.Action("Create", "ScheduledTasks", new { Area = "Administration" })" class="btn btn-icon btn-success" title="@Resources.UIText_Create @Resources.EntityLabel_ScheduledTask"><i class="fa fa-plus"></i></a>
    <a href="/Hangfire" class="btn btn-icon" title="@Resources.UIText_ViewHangfireDashboard" target="_blank"><i class="fa fa-list"></i></a>
    @ViewBag.Title<small></small>
</h1>
<!-- end page-header -->

<!-- begin row -->
<div class="row">
    <!-- begin col-12 -->
    <div class="col-md-12">
        <!-- begin panel -->
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>                   
                </div>
                <h4 class="panel-title">@Resources.UIText_SearchResults</h4>
            </div>
            <div class="panel-body">
                <table class="table table-striped table-hover">
                    <tr>
                        <th>@Resources.UIText_Actions</th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Enabled)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Recurring)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().LastResult)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().LastRun)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().NextRun)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Executions)
                        </th>
                    </tr>

                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            <a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("Details", new {id=item.Id})">
                                <i class="glyphicon glyphicon-th-list"></i>
                            </a>
                            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {id=item.Id})">
                                <i class="glyphicon glyphicon-edit"></i>
                            </a>
                            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {id=item.Id})">
                                <i class="glyphicon glyphicon-remove"></i>
                            </a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShortName)
                        </td>
                        <td>
                            @if (item.Enabled)
                            {
                                <i class="fa fa-check-square-o" style="font-size:x-large;"></i>
                            }
                            else
                            {
                                <i class="fa fa-square-o" style="font-size:x-large;"></i>
                            }
                        </td>
                        <td>
                            @if (item.Recurring)
                            {
                                <i class="fa fa-check-square-o" style="font-size:x-large;"></i>
                            }
                            else
                            {
                                <i class="fa fa-square-o" style="font-size:x-large;"></i>
                            }
                        </td>
                        <td title="@item.LastMessage">
                            @if (item.LastResult)
                            {
                                <span>@Resources.UIText_Ok</span>
                            }
                            else
                            {
                                <span>@Resources.ErrorText_Error</span>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastRun)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NextRun)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Executions)
                        </td>
                    </tr>
                    }

                </table>

                @if (Model.PageCount > 1)
                {
                    <hr />
                    <div class="pagination-container">
                        <span>Page </span>@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)<span> of </span>@Model.PageCount
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                    </div>

                }
            </div>
        </div>
    </div>
</div>