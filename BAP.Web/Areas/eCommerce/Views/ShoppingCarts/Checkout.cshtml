@using BAP.UI.HtmlHelpers
@using BAP.eCommerce.Resources
@model BAP.eCommerce.DAL.Entities.ShoppingCart
@{
    ViewBag.Title = ResObject.FieldLabel_ShoppingCart_Checkout;
    ViewBag.FullTextSearchAction = "/eCommerce/Products";
}

<style>
    .show-shipping-address {
        display: block;
    }

    .hide-shipping-address {
        display: none;
    }

    .field-validation-error {
        position: absolute;
    }
</style>

<!-- BEGIN #checkout-payment -->
<div class="section-container" id="checkout-info">
    <!-- BEGIN container -->
    <div class="container">
        <!-- BEGIN checkout -->
        <div class="checkout">
            <form action="@Url.Action("Checkout")" method="POST" name="form_shipping" class="form-horizontal" role="form" id="CheckoutForm">
                <!-- BEGIN checkout-header -->
                @Html.Partial("_CheckoutHeader", 2)
                <!-- END checkout-header -->
                <!-- BEGIN checkout-body -->

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CreatedBy)
                @Html.HiddenFor(model => model.LastModifiedBy)
                @Html.HiddenFor(model => model.TenantUnit)
                @Html.HiddenFor(model => model.TenantUnitId)
                @Html.HiddenFor(model => model.OwnerGroup)
                @Html.HiddenFor(model => model.OwnerPermissions)
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.CurrencyId)
                @Html.HiddenFor(model => model.ShippingOptionId)
                @Html.HiddenFor(model => model.PaymentOptionId)
                @Html.HiddenFor(model => model.DiscountCouponId)
                @Html.HiddenFor(model => model.Coupon)
                @Html.HiddenFor(model => model.CustomData)
                @Html.HiddenFor(model => model.Subtotal)
                @Html.HiddenFor(model => model.Total)
                @Html.HiddenFor(model => model.ShippingCost)
                @Html.HiddenFor(model => model.TotalDiscounts)
                @Html.HiddenFor(model => model.TaxTotal)

                @if (Model.BillingAddressId > 0)
                {
                    <span></span>
                    @Html.HiddenFor(model => model.BillingAddressId)
                    @Html.HiddenFor(model => model.BillingAddress.Id)
                    @Html.HiddenFor(model => model.BillingAddress.OwnerGroup)
                    @Html.HiddenFor(model => model.BillingAddress.OwnerPermissions)
                    @Html.HiddenFor(model => model.BillingAddress.TenantUnit)
                    @Html.HiddenFor(model => model.BillingAddress.TenantUnitId)
                    <span></span>
                }

                @if (Model.ShippingAddressId > 0)
                {
                    <span></span>
                    @Html.HiddenFor(model => model.ShippingAddressId)
                    @Html.HiddenFor(model => model.ShippingAddress.Id)
                    @Html.HiddenFor(model => model.ShippingAddress.OwnerGroup)
                    @Html.HiddenFor(model => model.ShippingAddress.OwnerPermissions)
                    @Html.HiddenFor(model => model.ShippingAddress.TenantUnit)
                    @Html.HiddenFor(model => model.ShippingAddress.TenantUnitId)
                    <span></span>
                }
                @Html.HiddenFor(model => model.Id)

                <div class="checkout-body">
                    <div class="form-group col-xs-12">
                        <div class="page-header">
                            <h4>@ResObject.FieldLabel_ShoppingCart_BillingInformation</h4>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.FirstName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.FirstName, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.FirstName)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.LastName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.LastName, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.LastName)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.ContactEmail, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.ContactEmail, new { htmlAttributes = new { @class = "form-control billing-address", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.ContactEmail)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.CompanyName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.CompanyName, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.CompanyName)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.AddressLine1, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.AddressLine1, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.AddressLine1)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.AddressLine2, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.AddressLine2, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.AddressLine2)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.City, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.City, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.City)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.Zip, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.Zip, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.Zip)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.Country, DisplayOptions.Humanize)
                            @Html.BapCountryListFor(model => model.BillingAddress.Country, new { @class = "form-control billing-address" })
                            @Html.ValidationMessageFor(model => model.BillingAddress.Country)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.State, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.State, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.State)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.PhoneNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.PhoneNumber, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.PhoneNumber)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.PhoneExtension, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.PhoneExtension, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.PhoneExtension)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.CellNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.CellNumber, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.CellNumber)
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.BillingAddress.FaxNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.BillingAddress.FaxNumber, new { htmlAttributes = new { @class = "form-control billing-address" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress.FaxNumber)
                        </div>
                    </div>

                    <div class="form-group col-xs-12">
                        <div class="page-header">
                            <h4>@ResObject.FieldLabel_ShoppingCart_ShippingInformation</h4>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 checkboxArea">
                            <input id="ShippingAsBilling" type="checkbox" name="ShippingAsBilling" @(Model.ShippingAsBilling ? "checked='checked'" : "")>
                            <label for="ShippingAsBilling"><span></span>@Html.DisplayNameFor(model => model.ShippingAsBilling)</label>
                            <a href="#" class="m-l-5 text-muted" data-toggle="tooltip" data-trigger="hover" data-placement="top" data-title="This helps us choose the best shipping method for you. Business shipments are normally delivered on weekdays by 5:00 p.m. local time. Residential shipments are normally delivered Monday - Saturday by 8:00 p.m. local time.">
                                <i class="fa fa-question-circle"></i>
                            </a>
                        </div>
                    </div>
                    <!--Begining of shipping info-->
                    <div class="form-group shipping-address hide-shipping-address ">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.FirstName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.FirstName)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.LastName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.LastName)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address ">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.ContactEmail, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.ContactEmail, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.ContactEmail)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.CompanyName, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.CompanyName)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address ">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.AddressLine1, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.AddressLine1)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.AddressLine2, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.AddressLine2)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.City, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.City)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.Zip, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.Zip)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.Country, DisplayOptions.Humanize)
                            @Html.BapCountryListFor(model => model.ShippingAddress.Country, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.Country)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.State, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.State)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.PhoneNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.PhoneNumber)
                        </div>
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.PhoneExtension, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.PhoneExtension, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.PhoneExtension)
                        </div>
                    </div>

                    <div class="form-group shipping-address hide-shipping-address">
                        <div class="shipping-address col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.CellNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.CellNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.CellNumber)
                        </div>
                        <div class="shipping-address  col-sm-6 col-xs-12">
                            @Html.LabelFor(model => model.ShippingAddress.FaxNumber, DisplayOptions.Humanize)
                            @Html.EditorFor(model => model.ShippingAddress.FaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress.FaxNumber)
                        </div>
                    </div>
                    <!--End of shipping info-->

                    <div class="form-group">
                        <div class="col-sm-12 col-xs-12">
                        @Html.LabelFor(model => model.Notes)
                        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @rows = "4" })
                        </div>
                    </div>

                    <hr />
                    <div class="m-b-5"><b>@ResObject.FieldLabel_ShoppingCart_ShippingPolicy</b></div>
                    <ul class="checkout-info-list">
                        <li>@ResObject.FieldLabel_ShoppingCart_SignatureMayBeRequiredForDelivery</li>
                        <li>@ResObject.FieldLabel_ShoppingCart_WeDoNotShipToPOBoxes</li>
                        <li>@ResObject.FieldLabel_ShoppingCart_DeliveryEstimatesBelowInclude</li>
                        <li>@ResObject.FieldLabel_ShoppingCart_WeDoNotShipDirectly</li>
                    </ul>
                </div>
                <!-- END checkout-body -->
                <!-- BEGIN checkout-footer -->
                <div class="checkout-footer">
                    <a href="@Url.Action("Details", "ShoppingCarts")" class="btn btn-white btn-lg pull-left">@ResObject.FieldLabel_ShoppingCart_Back</a>
                    <button type="submit" class="btn btn-inverse btn-lg p-l-30 p-r-30 m-l-10">@ResObject.FieldLabel_ShoppingCart_Continue</button>
                </div>
                <!-- END checkout-footer -->
            </form>
        </div>
        <!-- END checkout -->
    </div>
    <!-- END container -->
</div>
<!-- END #checkout-info -->

@section scripts
{
    <script>
    $(document).ready(function () {
        ShowHideShippingAddress(@Model.ShippingAsBilling.ToString().ToLower());

        $('#ShippingAsBilling').change(function () {
            ShowHideShippingAddress(this.checked);
        });

        $('#CheckoutForm').submit(function () {
            if ($('#ShippingAsBilling').val() == "true")
            {
                MapBillingToShippingAddress();
            }
        });
    });

    function ShowHideShippingAddress(checked)
    {
        if (checked) {
            $(".shipping-address").removeClass("show-shipping-address");
            $(".shipping-address").addClass("hide-shipping-address");
            $('#ShippingAsBilling').val(true);
            MapBillingToShippingAddress();
        } else {
            $(".shipping-address").removeClass("hide-shipping-address");
            $(".shipping-address").addClass("show-shipping-address");
            $('#ShippingAsBilling').val(false);
        }
    }

    function MapBillingToShippingAddress()
    {
        $(".billing-address").each(function (index) {
            var shippingId = $(this).attr("id").replace("BillingAddress", "ShippingAddress");
            $('#' + shippingId).val($(this).val());
        });
    }

    </script>
}


