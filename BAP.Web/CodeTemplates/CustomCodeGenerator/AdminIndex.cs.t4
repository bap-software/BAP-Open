<#@ template hostspecific="false" language="C#" #>
<#@ output extension=".cshtml" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq" #>
<#@ assembly name="EnvDTE" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Microsoft.AspNet.Scaffolding.Core.Metadata" #>
<#@ parameter type="EnvDTE.CodeType" name="ModelType" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata" name="ModelMetadata" #>
<#@ parameter type="System.String" name="ModelVariable" #>
<#@ parameter type="System.String" name="ModelTypeName" #>
<#@ parameter type="System.String" name="ModelTypeFullName" #>
<#@ parameter type="System.String" name="AreaName" #>
<#@ parameter type="System.String" name="ControllerName" #>
<#@ parameter type="System.String" name="ControllerRootName" #>
<#@ parameter type="System.String" name="BindAttributeIncludeText" #>
<#@ parameter type="System.String" name="PrimaryKeyName" #>
<#@ parameter type="System.String" name="PrimaryKeyShortTypeName" #>
<#@ parameter type="System.String" name="PrimaryKeyType" #>
<#@ parameter type="System.String" name="NameSpace" #>
<#@ parameter type="System.String" name="LayoutPath" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata[]" name="Properties" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata[]" name="PrimaryKeys" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string, Microsoft.AspNet.Scaffolding.Core.Metadata.RelatedModelMetadata>" name="RelatedModels" #>
@using BAP.eCommerce.Resources
@using BAP.Resources
@using PagedList.Mvc;
@using BAP.Common;
@using BAP.Lookups
@using BAP.eCommerce.Resources
@model PagedList.IPagedList<#= "<" + ModelTypeFullName + ">" #>
@{    
    Layout = "<#=LayoutPath #>";	
	ViewBag.Title = ResObject.EntityLabel_<#=ModelTypeName #>;
}

<!-- begin page-header -->
<h1 class="page-header">
    <a href="@Url.Action("Create", "<#=ControllerName #>")" class="btn btn-icon btn-success" title="@Resources.UIText_Create @ResObject.EntityLabel_<#=ModelTypeName #>"><i class="fa fa-plus"></i></a> 
    @ViewBag.Title<small></small>
 </h1>
<!-- end page-header -->


<!-- begin row -->
<div class="row">
    <!-- begin col-12 -->
    <div class="col-md-12">
        <!-- begin panel -->
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">                        
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                </div>
                <h4 class="panel-title">@Resources.UIText_SearchResults</h4>
            </div>
            <div class="panel-body">
                <table id="data-table" class="table table-striped table-bordered">
                    <tr>
		                <th>@Resources.UIText_Actions</th>
<#
string boolType = "System.Boolean";
bool isControlHtmlAttributesSupported = true;
List<string> bypassFields = new List<string>(){"OwnerGroup", "OwnerPermissions", "CreatedBy", "LastModifiedBy", "CreateDate", "LastModifiedDate", "TenantUnit", "TenantUnitId", "TimeStamp", "CreatedByUserName", "LastModifiedByUserName"};

foreach (PropertyMetadata property in Properties) {
    // Initial basic check of the properties
    if (!(property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation)) 
    {
        continue;
    }

    // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
    if (property.IsPrimaryKey && IsPropertyGuid(property)) 
    {
        continue;
    }

    //Bypass certain properties:
    if(bypassFields.Any(f => f == property.PropertyName))
    {
        continue;
    }
#>                        
                        <th>
                            @Html.DisplayNameFor(model => model.First().<#= property.PropertyName #>)
                        </th>
<#
}        
#>
                    </tr>
                @foreach (var item in Model) {
                    <tr>
<#
string pkName = GetPrimaryKeyName(PrimaryKeys);
if (pkName != null) {
#>
                        <td>
			                <a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("AdminDetails", new {id=item.<#= pkName #>})">
                                <i class="glyphicon glyphicon-th-list" aria-hidden="true"></i>
                            </a>
                            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {id=item.<#= pkName #>})">
                                <i class="glyphicon glyphicon-edit" aria-hidden="true"></i>
                            </a>
                            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {id=item.<#= pkName #>})">
                                <i class="glyphicon glyphicon-remove" aria-hidden="true"></i>
                            </a>            
                        </td>
<#
} else {
#>
                        <td>
			                <a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("AdminDetails", new {/* id=item.PrimaryKey */})">
                                <i class="glyphicon glyphicon-th-list" aria-hidden="true"></i>
                            </a>
                            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {/* id=item.PrimaryKey */})">
                                <i class="glyphicon glyphicon-edit" aria-hidden="true"></i>
                            </a>
                            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {/* id=item.PrimaryKey */})">
                                <i class="glyphicon glyphicon-remove" aria-hidden="true"></i>
                            </a>                           
                        </td>
<#
}
foreach (PropertyMetadata property in Properties) {
    // Initial basic check of the properties
    if (!(property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation)) 
    {
        continue;
    }

    // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
    if (property.IsPrimaryKey && IsPropertyGuid(property)) 
    {
        continue;
    }

    //Bypass certain properties:
    if(bypassFields.Any(f => f == property.PropertyName))
    {
        continue;
    }
#>                        
                        <td>
                            @Html.DisplayFor(modelItem => item.<#= property.PropertyName #>)
                        </td>
<#
}        
#>
                    </tr>
                }        
                </table>
                @if (Model.PageCount > 1)
                {
                    <hr />
                    <span>Page </span>@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)<span> of </span>@Model.PageCount
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                }
            </div>
        </div>
        <!-- end panel -->
    </div>
    <!-- end col-12 -->
</div>
<!-- end row -->

<#@ include file="ModelMetadataFunctions.cs.include.t4" #>