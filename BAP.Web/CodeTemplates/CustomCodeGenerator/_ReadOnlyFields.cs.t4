<#@ template hostspecific="false" language="C#" #>
<#@ output extension=".cshtml" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq" #>
<#@ assembly name="EnvDTE" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Microsoft.AspNet.Scaffolding.Core.Metadata" #>
<#@ parameter type="EnvDTE.CodeType" name="ModelType" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata" name="ModelMetadata" #>
<#@ parameter type="System.String" name="ModelVariable" #>
<#@ parameter type="System.String" name="ModelTypeName" #>
<#@ parameter type="System.String" name="ModelTypeFullName" #>
<#@ parameter type="System.String" name="AreaName" #>
<#@ parameter type="System.String" name="ControllerName" #>
<#@ parameter type="System.String" name="ControllerRootName" #>
<#@ parameter type="System.String" name="BindAttributeIncludeText" #>
<#@ parameter type="System.String" name="PrimaryKeyName" #>
<#@ parameter type="System.String" name="PrimaryKeyShortTypeName" #>
<#@ parameter type="System.String" name="PrimaryKeyType" #>
<#@ parameter type="System.String" name="NameSpace" #>
<#@ parameter type="System.String" name="LayoutPath" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.PropertyMetadata[]" name="Properties" #>
@model <#=ModelTypeFullName #>

<#
string boolType = "System.Boolean";
bool isControlHtmlAttributesSupported = true;
List<string> bypassFields = new List<string>(){"OwnerGroup", "OwnerPermissions", "CreatedBy", "LastModifiedBy", "CreateDate", "LastModifiedDate", "TenantUnit", "TenantUnitId", "TimeStamp", "CreatedByUserName", "LastModifiedByUserName"};

foreach (PropertyMetadata property in Properties) {
        // Initial basic check of the properties
        if (!(property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation)) 
        {
            continue;
        }

        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) 
        {
            continue;
        }

		//Bypass certain properties:
		if(bypassFields.Any(f => f == property.PropertyName))
        {
			continue;
		}
#>
        <div class="form-group">
			@Html.LabelFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
			<div class="col-md-8 col-sm-8">
				@Html.DisplayFor(model => model.<#= property.PropertyName #>)
			</div>
		</div>  
<#  
}
#>

<#@ include file="ModelMetadataFunctions.cs.include.t4" #>