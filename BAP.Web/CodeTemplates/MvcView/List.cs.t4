<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@using BAP.Resources
@using PagedList.Mvc;
@using BAP.Common;
@using BAP.Lookups
@model PagedList.IPagedList<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = Resources.UIText_Menu_Index;
	ILookupEngine engine = ViewBag.LookupEngineInstance;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewDataTypeShortName #>s <#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

@section featured
{
    <section class="featured-section index">
        <!-- category image -->
        <div class="container">
            <div class="clearfix">
                <h1 class="page-title"><span>@Resources.EntityLabel_<#= ViewDataTypeShortName #> @ViewBag.Title</span></h1> <!-- category title -->
                <p>
                    <a href="@Url.Action("Create")"><i class="fa fa-plus"></i> @Resources.UIText_Create</a> |
                    <a href="javascript:window.print()"><i class="fa fa-print"></i> @Resources.UIText_Print</a> |
                    <span class="add-to-fav"><a href="#"><i class="fa fa-star"></i> @Resources.UIText_AddToFavorites</a></span> <!-- go to add to favorites page, if not logged go to login page -->
                </p>
            </div>
        </div>
    </section>
}

@if (Model.Count > 0)
{
<table class="table">
    <tr>
		<th>@Resources.UIText_Actions</th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }

		//Bypass certain properties:
		if(property.PropertyName == "CreatedBy" || property.PropertyName == "LastModifiedBy" 
			|| property.PropertyName == "TenantUnit" || property.PropertyName == "TenantUnitId"
			 || property.PropertyName == "TimeStamp" || property.PropertyName == "OwnerGroup" || property.PropertyName == "OwnerPermissions")
        {
			continue;
		}
#>
        <th>
            @Html.DisplayNameFor(model => model[0].<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>      
    </tr>

@foreach (var item in Model) {
    <tr>
	<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			<a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("Details", new {id=item.<#= pkName #>})">
                <i class="glyphicon glyphicon-th-list"></i>
            </a>
            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {id=item.<#= pkName #>})">
                <i class="glyphicon glyphicon-edit"></i>
            </a>
            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {id=item.<#= pkName #>})">
                <i class="glyphicon glyphicon-remove"></i>
            </a>            
        </td>
<#
} else {
#>
        <td>
			<a title="@Resources.UIText_Details" style="text-decoration: none;" href="@Url.Action("Details", new {/* id=item.PrimaryKey */})">
                <i class="glyphicon glyphicon-th-list"></i>
            </a>
            <a title="@Resources.UIText_Edit" style="text-decoration: none;" href="@Url.Action("Edit", new {/* id=item.PrimaryKey */})">
                <i class="glyphicon glyphicon-edit"></i>
            </a>
            <a title="@Resources.UIText_Delete" style="text-decoration: none;" href="@Url.Action("Delete", new {/* id=item.PrimaryKey */})">
                <i class="glyphicon glyphicon-remove"></i>
            </a>                 
        </td>
<#
}
#>


<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }

		//Bypass certain properties:
		if(property.PropertyName == "CreatedBy" || property.PropertyName == "LastModifiedBy" 
			|| property.PropertyName == "TenantUnit" || property.PropertyName == "TenantUnitId"
			 || property.PropertyName == "TimeStamp" || property.PropertyName == "OwnerGroup" || property.PropertyName == "OwnerPermissions")
        {
			continue;
		}
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

#>
    </tr>
}

</table>
	if (Model.PageCount > 1)
    {
        <hr />
        <span>Page </span>@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)<span> of </span>@Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
}
else
{
    <span>@Resources.UIText_NoDataFound</span>
}

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>